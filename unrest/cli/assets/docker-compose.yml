
services:
  postgres:
    network_mode: "host"
    image: postgres:16
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: pg_isready --username=postgres
      interval: 10s
      timeout: 5s
      retries: 5

  migration:
    network_mode: "host"  
    build:
      context: .
      dockerfile: Dockerfile.dev  
    command: poetry run unrest db reset
    volumes:
      - ".:/host"
    depends_on:
      postgres:
        condition: service_healthy 

  # redis:
  #   network_mode: "host"
  #   image: redis

  # scheduler:
  #   network_mode: "host"  
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.dev
  #   volumes:
  #     - ".:/host"
  #   command: poetry run taskiq scheduler entrypoint:scheduler
  #   depends_on: 
  #     redis:
  #       condition: service_started

  # broker:
  #   network_mode: "host"  
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.dev
  #   volumes:
  #     - ".:/host"
  #   command: poetry run taskiq worker entrypoint:broker --reload
  #   depends_on: 
  #     redis:
  #       condition: service_started
  #     migration:
  #       condition: service_completed_successfully        

  app:
    network_mode: "host"  
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ".:/host"
    command: poetry run uvicorn demo:app --host "0.0.0.0" --port 8080 --reload
    depends_on:
      postgres:
        condition: service_healthy     
      migration:
        condition: service_completed_successfully
